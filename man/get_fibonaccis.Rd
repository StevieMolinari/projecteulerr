% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_fibonaccis.R
\name{get_first_n_fibonaccis}
\alias{get_first_n_fibonaccis}
\alias{get_fibonaccis_up_to}
\alias{get_fibonaccis}
\title{Provides a sequence of Fibonacci numbers}
\usage{
get_first_n_fibonaccis(n, firstTwo = c(1L, 1L))

get_fibonaccis_up_to(bound)

get_fibonaccis(n, bound, ...)
}
\arguments{
\item{n}{the number of terms in the sequence}

\item{firstTwo}{the first two terms in the sequence}

\item{bound}{the upper bound for the terms in the sequence}

\item{...}{further arguments to be passed to \code{get_first_n_fibonaccis} or \code{get_fibonaccis_up_to}}
}
\value{
a sequence of integers
}
\description{
Provides a sequence of Fibonacci numbers
}
\section{May be useful for}{

\itemize{
\item Problem 2: Even Fibonacci numbers
}
}

\examples{
get_fibonaccis_up_to(10)
get_first_n_fibonaccis(10)

# `firstTwo` parameter can be used to generate other sequences:

# Lucas numbers
get_first_n_fibonaccis(10, firstTwo = c(1, 3))

# one negative and one positive can be fun to play with
get_first_n_fibonaccis(10, firstTwo = c(1, -1))
get_first_n_fibonaccis(10, firstTwo = c(-9, 6))
get_first_n_fibonaccis(10, firstTwo = c(-8, 5))


# in `get_fibonaccis` default behavior is to prefer `n`
get_fibonaccis(10)

# make explicit call to bound for use of `get_fibonaccis_up_to`
get_fibonaccis(bound=10)

# when both are supplied and `bound` is ignored and a warning is thrown
get_fibonaccis(n=10, bound=10)

}
\seealso{
\code{\link[=get_nth_fibonacci]{get_nth_fibonacci()}}
}
